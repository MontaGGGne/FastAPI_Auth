version: "3"

services:

  postgres-fastapi:
    container_name: postgres-fastapi-auth
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${FASTAPI_PG_DB}
    volumes:
      - fastapi-postgres-db-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 5
    restart: always

  fastapi-auth:
    container_name: fastapi-auth
    image: ${DOCKER_HUB_USER}/pste-service-fastapi-auth:v1-release
    environment:
      - DAGSHUB_USER=${DAGSHUB_USER}
      - DAGSHUB_PASSWORD=${DAGSHUB_PASSWORD}
      - DAGSHUB_TOKEN=${DAGSHUB_TOKEN}
      - DAGSHUB_URI=${DAGSHUB_URI}
      - DAGSHUB_NAME_MODEL=${DAGSHUB_NAME_MODEL}
      - DAGSHUB_VERSION_MODEL=${DAGSHUB_VERSION_MODEL}
      - FASTAPI_DB_HOST=${FASTAPI_DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${FASTAPI_DB_HOST}
      - FASTAPI_DB_PORT=${FASTAPI_DB_PORT}
      - FASTAPI_PG_DB=${FASTAPI_PG_DB}
      - AWS_ACCESS_READ_KEY_ID=${AWS_ACCESS_READ_KEY_ID}
      - AWS_SECRET_ACCESS_READ_KEY=${AWS_SECRET_ACCESS_READ_KEY}
      - AWS_ACCESS_WRITE_KEY_ID=${AWS_ACCESS_WRITE_KEY_ID}
      - AWS_SECRET_ACCESS_WRITE_KEY=${AWS_SECRET_ACCESS_WRITE_KEY}
      - BUCKET_ID=${BUCKET_ID}
    ports:
      - 8000:8000
    depends_on:
      - postgres-fastapi
    restart: always
    command:  bash -c "alembic -c ./app/alembic.ini upgrade head && uvicorn "run:app" --host 0.0.0.0 --port 8000 --reload --timeout-keep-alive 600"

volumes:
  fastapi-postgres-db-volume:
  pgadmin-data:
